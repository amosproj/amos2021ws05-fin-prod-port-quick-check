openapi: '3.0.0'
info:
  version: "0.3"
  title: API for AMOS5 Financial QuickCheck
  description: defines all endpoints for financial quickcheck application

paths:
  /productareas:
    get:
      summary: retrieves all product areas
      responses:
        200:
          description: returns list of product area objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'components_schema_attributes.yaml#/components/schemas/productArea'
        404:
          $ref: 'components_responses.yaml#/components/responses/404notfound'

  /ratings:
    get:
      summary: retrieves all ratings for economic and/or complexity rating area
      parameters:
        - $ref: 'components_parameters.yaml#/components/parameters/ratingArea'
      responses:
        200:
          description: returns list of rating objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'components_schemas.yaml#/components/schemas/rating'
        404:
          $ref: 'components_responses.yaml#/components/responses/404notfound'
        '5XX':
          $ref: 'components_responses.yaml#/components/responses/5XXserverError'

  /projects:
    get:
      summary: retrieves all projects
      responses:
        200:
          description: returns list of project objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'components_schemas.yaml#/components/schemas/smallProjects'
        '5XX':
          $ref: 'components_responses.yaml#/components/responses/5XXserverError'
    post:
      summary: creates a new project
      requestBody:
        description: project object
        required: true
        content:
          application/json:
            schema:
              $ref: 'components_schemas.yaml#/components/schemas/createProject'
      responses:
        201:
          description: returns list of project objects containing project meta data
          content:
            application/json:
              schema:
                $ref: 'components_schemas.yaml#/components/schemas/createdProject'
        400:
          $ref: 'components_responses.yaml#/components/responses/400badrequest'
        '5XX':
          $ref: 'components_responses.yaml#/components/responses/5XXserverError'

  /projects/{projectID}:
    get:
      summary: retrieves one project
      parameters:
        - $ref: 'components_parameters.yaml#/components/parameters/projectID'
      responses:
        200:
          description: returns project object containing project meta data
          content:
            application/json:
              schema:
                $ref: 'components_schemas.yaml#/components/schemas/getProject'
        404:
          $ref: 'components_responses.yaml#/components/responses/404notfound'
        '5XX':
          $ref: 'components_responses.yaml#/components/responses/5XXserverError'
    put:
      summary: updates one project
      parameters:
        - $ref: 'components_parameters.yaml#/components/parameters/projectID'
      requestBody:
        description: project object
        required: true
        content:
          application/json:
            schema:
              $ref: 'components_schemas.yaml#/components/schemas/updateProject'
      responses:
        200:
          description: returns project object containing project meta data
          content:
            application/json:
              schema:
                $ref: 'components_schemas.yaml#/components/schemas/getProject'
        400:
          $ref: 'components_responses.yaml#/components/responses/400badrequest'
        404:
          $ref: 'components_responses.yaml#/components/responses/404notfound'
        '5XX':
          $ref: 'components_responses.yaml#/components/responses/5XXserverError'

  /projects/{projectID}/users:
    get:
      summary: retrieves all assigned users of a project
      parameters:
        - $ref: 'components_parameters.yaml#/components/parameters/projectID'
      responses:
        200:
          description: returns list of user objects
          content:
            application/json:
              schema:
                $ref: 'components_schemas.yaml#/components/schemas/members'
        404:
          $ref: 'components_responses.yaml#/components/responses/404notfound'
        '5XX':
          $ref: 'components_responses.yaml#/components/responses/5XXserverError'
    post:
      summary: assigns users to projectID
      parameters:
        - $ref: 'components_parameters.yaml#/components/parameters/projectID'
      requestBody:
        description: list of user objects
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: 'components_schemas.yaml#/components/schemas/assignUser'
      responses:
        201:
          description: returns list of user objects
          content:
            application/json:
              schema:
                $ref: 'components_schemas.yaml#/components/schemas/members'
        400:
          $ref: 'components_responses.yaml#/components/responses/400badrequest'
        404:
          $ref: 'components_responses.yaml#/components/responses/404notfound'
        '5XX':
          $ref: 'components_responses.yaml#/components/responses/5XXserverError'
    put:
      summary: updates users for projectID
      parameters:
        - $ref: 'components_parameters.yaml#/components/parameters/projectID'
      requestBody:
        description: list of user objects
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: 'components_schemas.yaml#/components/schemas/updateUserProject'
      responses:
        200:
          description: returns list of user objects
          content:
            application/json:
              schema:
                $ref: 'components_schemas.yaml#/components/schemas/members'
        400:
          $ref: 'components_responses.yaml#/components/responses/400badrequest'
        404:
          $ref: 'components_responses.yaml#/components/responses/404notfound'
        '5XX':
          $ref: 'components_responses.yaml#/components/responses/5XXserverError'
    delete:
      summary: unassigns users from project
      parameters:
        - $ref: 'components_parameters.yaml#/components/parameters/projectID'
      requestBody:
        description: list of user objects
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: 'components_schemas.yaml#/components/schemas/deleteProjectUser'
      responses:
        200:
          description: success
        400:
          $ref: 'components_responses.yaml#/components/responses/400badrequest'
        404:
          $ref: 'components_responses.yaml#/components/responses/404notfound'
        '5XX':
          $ref: 'components_responses.yaml#/components/responses/5XXserverError'

  /projects/{projectID}/results:
    get:
      summary: retrieves list of evaluations for all products in project and/or product area
      parameters:
        - $ref: 'components_parameters.yaml#/components/parameters/projectID'
        - $ref: 'components_parameters.yaml#/components/parameters/productAreaID'
      responses:
        200:
          description: returns list of result objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'components_schemas.yaml#/components/schemas/getProductEvaluation'
        400:
          $ref: 'components_responses.yaml#/components/responses/400badrequest'
        404:
          $ref: 'components_responses.yaml#/components/responses/404notfound'
        '5XX':
          $ref: 'components_responses.yaml#/components/responses/5XXserverError'

  /projects/{projectID}/products:
    get:
      summary: retrieves all products of given projectID
      parameters:
        - $ref: 'components_parameters.yaml#/components/parameters/projectID'
        - $ref: 'components_parameters.yaml#/components/parameters/productAreaID'
      responses:
        200:
          description: returns list of product objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'components_schemas.yaml#/components/schemas/getProduct'
        404:
          $ref: 'components_responses.yaml#/components/responses/404notfound'
        '5XX':
          $ref: 'components_responses.yaml#/components/responses/5XXserverError'
    post:
      summary: creates a new product for projectID
      parameters:
        - $ref: 'components_parameters.yaml#/components/parameters/projectID'
      requestBody:
        description: product object
        content:
          application/json:
            schema:
              $ref: 'components_schemas.yaml#/components/schemas/createProduct'
      responses:
        201:
          description: returns a list of product objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'components_schemas.yaml#/components/schemas/getProduct'
        404:
          $ref: 'components_responses.yaml#/components/responses/404notfound'
        '5XX':
          $ref: 'components_responses.yaml#/components/responses/5XXserverError'

  /products/{productID}:
    get:
      summary: retrieves data for one product
      parameters:
        - $ref: 'components_parameters.yaml#/components/parameters/productID'
      responses:
        200:
          description: returns a product object
          content:
            application/json:
              schema:
                $ref: 'components_schemas.yaml#/components/schemas/getProduct'
        404:
          $ref: 'components_responses.yaml#/components/responses/404notfound'
        '5XX':
          $ref: 'components_responses.yaml#/components/responses/5XXserverError'
    put:
      summary: updates product with given productID
      parameters:
        - $ref: 'components_parameters.yaml#/components/parameters/productID'
      requestBody:
        required: true
        description: product object
        content:
          application/json:
            schema:
              $ref: 'components_schemas.yaml#/components/schemas/updateProduct'
      responses:
        200:
          description: Update successful
        400:
          $ref: 'components_responses.yaml#/components/responses/400badrequest'
        404:
          $ref: 'components_responses.yaml#/components/responses/404notfound'
        '5XX':
          $ref: 'components_responses.yaml#/components/responses/5XXserverError'

  /products/{productID}/ratings:
    get:
      summary: retrieves all data for economic and/or complexity rating for productID
      parameters:
        - $ref: 'components_parameters.yaml#/components/parameters/productID'
        - $ref: 'components_parameters.yaml#/components/parameters/ratingArea'
      responses:
        200:
          description: returns list of ratings for productID
          content:
            application/json:
              schema:
                $ref: 'components_schemas.yaml#/components/schemas/getProductRating'
        404:
          $ref: 'components_responses.yaml#/components/responses/404notfound'
        '5XX':
          $ref: 'components_responses.yaml#/components/responses/5XXserverError'
    put:
      summary: updates data for economic or complexity rating
      parameters:
        - $ref: 'components_parameters.yaml#/components/parameters/productID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: 'components_schemas.yaml#/components/schemas/postProductRating'
      responses:
        200:
          description: returns list of rating objects for productID
          content:
            application/json:
              schema:
                $ref: 'components_schemas.yaml#/components/schemas/postProductRating'
        400:
          $ref: 'components_responses.yaml#/components/responses/400badrequest'
        404:
          $ref: 'components_responses.yaml#/components/responses/404notfound'
        '5XX':
          $ref: 'components_responses.yaml#/components/responses/5XXserverError'

  /users:
    get:
      summary: retrieves list of all users
      responses:
        200:
          description: returns list of user objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: 'components_schemas.yaml#/components/schemas/user'
        '5XX':
          $ref: 'components_responses.yaml#/components/responses/5XXserverError'
    post:
      summary: creates a new user
      requestBody:
        description: user object
        content:
          application/json:
            schema:
              $ref: 'components_schemas.yaml#/components/schemas/createUser'
      responses:
        201:
          description: returns user object
          content:
            application/json:
              schema:
                $ref: 'components_schemas.yaml#/components/schemas/user'
        '5XX':
          $ref: 'components_responses.yaml#/components/responses/5XXserverError'

  /users/email/{userEmail}:
    get:
      summary: retrieve user data based on email
      parameters:
        - $ref: 'components_parameters.yaml#/components/parameters/userEmail'
      responses:
        200:
          description: returns user object
          content:
            application/json:
              schema:
                $ref: 'components_schemas.yaml#/components/schemas/user'
        400:
          $ref: 'components_responses.yaml#/components/responses/400badrequest'
        404:
          $ref: 'components_responses.yaml#/components/responses/404notfound'
        '5XX':
          $ref: 'components_responses.yaml#/components/responses/5XXserverError'
    put:
      summary: updates user with given email adress
      parameters:
        - $ref: 'components_parameters.yaml#/components/parameters/userEmail'
      requestBody:
        required: true
        description: user object
        content:
          application/json:
            schema:
              $ref: 'components_schemas.yaml#/components/schemas/updateUser'
      responses:
        200:
          description: Update successsful.
        404:
          $ref: 'components_responses.yaml#/components/responses/404notfound'
        '5XX':
          $ref: 'components_responses.yaml#/components/responses/5XXserverError'

components:
  schemas:
    userID:
      $ref: 'components_schema_attributes.yaml#/components/schemas/userID'
    userEmail:
      $ref: 'components_schema_attributes.yaml#/components/schemas/userEmail'
    userName:
      $ref: 'components_schema_attributes.yaml#/components/schemas/userName'
    password:
      $ref: 'components_schema_attributes.yaml#/components/schemas/password'
    role:
      $ref: 'components_schema_attributes.yaml#/components/schemas/role'
    creatorID:
      $ref: 'components_schema_attributes.yaml#/components/schemas/userID'
    projectID:
      $ref: 'components_schema_attributes.yaml#/components/schemas/projectID'
    projectName:
      $ref: 'components_schema_attributes.yaml#/components/schemas/projectName'
    productID:
      $ref: 'components_schema_attributes.yaml#/components/schemas/productID'
    productName:
      $ref: 'components_schema_attributes.yaml#/components/schemas/productName'
    productArea:
        $ref: 'components_schema_attributes.yaml#/components/schemas/productArea'
    parentID:
      $ref: 'components_schema_attributes.yaml#/components/schemas/parentID'
    resource:
      $ref: 'components_schema_attributes.yaml#/components/schemas/resource'
    ratingID:
      $ref: 'components_schema_attributes.yaml#/components/schemas/ratingID'
    category:
      $ref: 'components_schema_attributes.yaml#/components/schemas/category'
    criterion:
      $ref: 'components_schema_attributes.yaml#/components/schemas/criterion'
    ratingArea:
      $ref: 'components_schema_attributes.yaml#/components/schemas/ratingArea'
    answer:
      $ref: 'components_schema_attributes.yaml#/components/schemas/answer'
    comment:
      $ref: 'components_schema_attributes.yaml#/components/schemas/comment'
    score:
      $ref: 'components_schema_attributes.yaml#/components/schemas/score'


