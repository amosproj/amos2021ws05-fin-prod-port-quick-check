package com.tu.FinancialQuickCheck.Controller;

import com.tu.FinancialQuickCheck.db.ProjectEntity;
import com.tu.FinancialQuickCheck.db.ProjectRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.Optional;

@RestController
public class ProjectsController {

    // auto-generated by Spring, we will use it to handle data
    @Autowired
    private ProjectRepository projectRepository;

    // TODO: implement
    @GetMapping("/myprojects")
    public String[] getUserProjects(@RequestParam Integer userID) {
        String[] userprojects = {"Commerzbank", "DKB", "Some other financial institution"};
        return userprojects;
    }

    // TODO: exception handling if ID doesnt exist
    @GetMapping("/myprojects/project")
    Optional<ProjectEntity> getProjectData(@RequestParam Integer projectID) {
        Optional<ProjectEntity> p = projectRepository.findById(projectID);
        return p;
    }

    // TODO: check if we need the project.setID()
    @PostMapping("/myprojects/project")
    ProjectEntity newProject(@RequestParam String projectName, @RequestParam int id) {
        ProjectEntity newProjectEntity = new ProjectEntity();
        newProjectEntity.name = projectName;
        newProjectEntity.id = id;
        return projectRepository.save(newProjectEntity);
    }

    // TODO: exception handling if ID doesnt exist
    @DeleteMapping("/myprojects/project")
    void deleteProject(@RequestParam Integer projectID) {
        projectRepository.deleteById(projectID);
    }

    // not part of the official contract, just to test access to mysql
    @GetMapping(path="/allprojects")
    public @ResponseBody
    Iterable<ProjectEntity> getAllProjects() {
        // This returns a JSON with all users
        return projectRepository.findAll();
    }
}
